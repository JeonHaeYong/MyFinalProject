<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ApiDAO">
	<select id="selectForMain" resultType="kh.spring.dto.ApiAbandonedAnimalDTO">
			select * from (select row_number() over(order by noticeEdt desc) as rown, api_abandoned_animal.*
		 from api_abandoned_animal) where rown between 1 and 2
	</select>
	<insert id="insert">
		insert into api_abandoned_animal values(api_abandoned_animal_seq.nextval, #{noticeEdt},#{popfile},#{processState},#{sexCd},#{neuterYn},
		#{specialMark},#{careNm},#{careTel},#{careAddr},#{orgNm},#{chargeNm},#{officetel},#{noticeComment},#{desertionNo},
		#{filename},#{happenDt},#{happenPlace},#{kindCd},#{colorCd},#{age},#{weight},#{noticeNo},#{noticeSdt})
	</insert>
	
	<select id="selectCount" resultType="java.lang.Integer">
		select count(*) from api_abandoned_animal
	</select>
	<select id="selectCountByCondition" resultType="java.lang.Integer">
		select count(*) from api_abandoned_animal where happenDt between #{dateFrom} and #{dateTo}
		  and orgNm like #{sidoSigungu} and careNm like #{shelter} and
		   kindCd like #{species} and kindCd like #{speciesKind} and processState like #{processState}
	</select>
	<select id="selectOneBySeq" resultType="kh.spring.dto.ApiAbandonedAnimalDTO">
		select * from api_abandoned_animal where seq=#{value}
	</select>
	<select id="selectByCondition" resultType="kh.spring.dto.ApiAbandonedAnimalDTO">
		select * from (select row_number() over(order by seq desc) as rown, api_abandoned_animal.*
		 from api_abandoned_animal where happenDt between #{dateFrom} and #{dateTo}
		  and orgNm like #{sidoSigungu} and careNm like #{shelter} and
		   kindCd like #{species} and kindCd like #{speciesKind} and processState like #{processState}) where rown between #{startNum} and #{endNum}

	</select>
	<select id="selectAll" resultType="kh.spring.dto.ApiAbandonedAnimalDTO">
		select * from (select row_number() over(order by seq desc) as rown, api_abandoned_animal.*
		 from api_abandoned_animal where happenDt between #{dateFrom} and #{dateTo}
		  and processState in (#{processState},'공고중') ) where rown between #{startNum} and #{endNum}
	</select>
	
	<delete id="deleteAll">
		delete from api_abandoned_animal
	</delete>
	<update id="dropSeq">
		drop sequence api_abandoned_animal_seq
	</update>
	<update id="createSeq">
		create sequence api_abandoned_animal_seq start with 1 increment by 1 NOCACHE nomaxvalue 
	</update>
	
</mapper>