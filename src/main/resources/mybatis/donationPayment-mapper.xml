<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="DonationPaymentDAO">

	<insert id="insertDonationPayment">
		insert into donated_payment values(donated_payment_seq.nextval, #{donator}, #{donator_name}, #{donation_name}, #{donation}, default, #{donate_type})
	</insert>
	
	<select id="selectDonationPaymentById" resultType="kh.spring.dto.DonationPaymentDTO">
		select * from (
			select row_number() over(order by seq desc) as rown, dp.*
			from donated_payment dp
			where donator = #{id}) 
		where rown between #{start} and #{end}
	</select>
	
	<select id="getDonationPaymentTotalCountById" resultType="int">
		select count(*) from donated_payment where donator = #{value}
	</select>
	
	<select id="selectList" resultType="kh.spring.dto.DonationPaymentDTO">
		select donation, donation_name, donated_time from
		(
		    select ROWNUM as rown, donation, donation_name, donated_time from
		    (select * from (select sum(donation) as donation, donation_name, to_char(donated_time, 'yy/MM') as donated_time from DONATED_PAYMENT
		    group by 
		        donation_name ,to_char(donated_time, 'yy/MM'))
		    order by donated_time desc, donation_name asc)
		)
		where rown between #{start} and #{end}	
	</select>
	
	<select id="selectAll" resultType="kh.spring.dto.DonationPaymentDTO">
		select * 
		from (select row_number() over(order by seq desc) as rown, donated_payment.* from donated_payment)
		where rown between #{start} and #{end}	
	</select>
	
	<select id="selectCountForList" resultType="java.lang.Integer">
		select count(*)
		from (select * from (select sum(donation) as donation, donation_name, to_char(donated_time, 'yy/MM') as donated_time from DONATED_PAYMENT
				group by 
				donation_name ,to_char(donated_time, 'yy/MM'))
				order by donated_time desc, donation_name asc)			
	</select>
</mapper>